---
kind: Template
apiVersion: template.openshift.io/v1
metadata: 
 name: grad-redis-sa
 annotations: 
   openshift.io/display-name: Grad-Redis-sa
   description: "Redis in-memory data structure store, with persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/redis-container/blob/master/3.2.\n\nNOTE: You must have persistent volumes available in your cluster to use this template."
   iconClass: icon-redis
   tags: "database,redis"
   openshift.io/long-description: "This template provides a standalone Redis server. The data is stored in memory."
   openshift.io/provider-display-name: "Red Hat, Inc."
   openshift.io/documentation-url: "https://github.com/sclorg/redis-container/tree/master/3.2"
   openshift.io/support-url: "https://access.redhat.com"
objects:
- kind: Secret
  apiVersion: v1
  metadata:
    name: "${DATABASE_SERVICE_NAME}"
    labels:
      app: "${DATABASE_SERVICE_NAME}"
    annotations:
      template.openshift.io/expose-password: "{.data['REDIS_PASSWORD']}"
      as-copy-of: template.${NAME}-secret
  stringData:
    REDIS_PASSWORD: "${REDIS_PASSWORD}"
- kind: Service
  apiVersion: v1
  metadata:
    name: "${DATABASE_SERVICE_NAME}"
    labels:
      app: "${DATABASE_SERVICE_NAME}"
    annotations:
      template.openshift.io/expose-uri: redis://{.spec.clusterIP}:{.spec.ports[?(.name=="redis")].port}
  spec:
    ports:
    - name: "${DATABASE_SERVICE_NAME}"
      protocol: TCP
      port: 6379
      targetPort: 6379
    selector:
        app: "${DATABASE_SERVICE_NAME}"
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${DATABASE_SERVICE_NAME}-data
    labels:
      app: ${DATABASE_SERVICE_NAME}
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: "${STORAGE_SIZE}"
- apiVersion: apps/v1
  kind: Deployment
  metadata: 
     name: "${DATABASE_SERVICE_NAME}"
     labels:
       app: "${DATABASE_SERVICE_NAME}"
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: "${DATABASE_SERVICE_NAME}"
    template:
      metadata:
        labels:
          app: "${DATABASE_SERVICE_NAME}"
      spec:
        containers:
          - name: "${DATABASE_SERVICE_NAME}"
            image: artifacts.developer.gov.bc.ca/docker-remote/redis:${REDIS_VERSION}
            ports:
              - containerPort: 6379
                protocol: TCP
            resources:
              requests:
                cpu: "${CPU_REQUEST}"
                memory: "${MEMORY_REQUEST}"
              limits:
                cpu: "${CPU_LIMIT}"
                memory: "${MEMORY_LIMIT}"
            terminationMessagePath: "/dev/termination-log"
            terminationMessagePolicy: File
            imagePullPolicy: IfNotPresent
            env:
              - name: REDIS_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: "${DATABASE_SERVICE_NAME}"
                    key: REDIS_PASSWORD
              - name: TZ
                value: "America/Vancouver"
            volumeMounts:
              - name: ${DATABASE_SERVICE_NAME}-data
                mountPath: /conf
                readOnly: false
              - name: ${DATABASE_SERVICE_NAME}-data
                mountPath: /data
                readOnly: false
        volumes:
          - name: ${DATABASE_SERVICE_NAME}-data
            persistentVolumeClaim:
              claimName: ${DATABASE_SERVICE_NAME}-data
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 25%
        maxSurge: 25%
    volumeClaimTemplates:
      - metadata:
          name: ${DATABASE_SERVICE_NAME}-data
          labels:
            name: ${DATABASE_SERVICE_NAME}-data
        spec:
          accessModes: [ "ReadWriteOnce" ]
          resources:
            requests:
              storage: "${STORAGE_SIZE}"
parameters:
- name: STORAGE_SIZE
  value: 100Mi
- name: CPU_LIMIT
  value: 50m
- name: MEMORY_LIMIT
  value: 250Mi
- name: CPU_REQUEST
  value: 10m
- name: MEMORY_REQUEST
  value: 50Mi
- name: DATABASE_SERVICE_NAME
  displayName: Database Service Name
  description: The name of the OpenShift Service exposed for the database.
  value: redis-sa
  required: true
- name: REDIS_PASSWORD
  displayName: Redis Connection Password
  description: Password for the Redis connection user.
  generate: expression
  from: '[a-zA-Z0-9]{16}'
  required: true
- name: REDIS_VERSION
  displayName: Version of Redis Image
  description: Version of Redis image to be used (3.2 or latest).
  value: "7.0.8"